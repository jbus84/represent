name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for semantic-release
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Create virtual environment and install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"
      - name: Lint
        run: uv run ruff check .
      - name: Type check
        run: uv run pyright
      - name: Test (Fast - excludes slow/performance tests)
        run: make test-fast-cov
      - name: Upload coverage to Codecov
        if: env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Coverage Summary
        run: |
          echo "Coverage report generated successfully"
          if [ -f coverage.xml ]; then
            echo "✅ Coverage XML file created"
            grep -o 'line-rate="[^"]*"' coverage.xml | head -1 || echo "Coverage data available"
          else
            echo "❌ Coverage XML file not found"
          fi

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Create virtual environment and install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"
      - name: Python Semantic Release
        run: uv run semantic-release version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 