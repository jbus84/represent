[project]
name = "represent"
version = "1.4.0"
description = "LOB features"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "numpy>=1.24.0",
    "polars>=0.20.0",
    "databento>=0.35.0",
    "zstandard>=0.22.0",
    "psutil>=5.9.0",
    "torch>=2.0.0",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
]
[project.optional-dependencies]
dev = [
    "ruff>=0.4.4",
    "pyright>=1.1.355",
    "commitizen>=3.13.0",
    "python-semantic-release>=8.0.0",
    "pre-commit>=3.7.0",
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "mypy>=1.8.0",
    "pydantic-settings",
    "pyright>=1.1.403",
    "matplotlib>=3.8.0",
]

[tool.ruff]
line-length = 100

[tool.ruff.lint.per-file-ignores]

[tool.pyright]
typeCheckingMode = "strict"
include = ["represent"]
exclude = ["tests/**", "examples/**", "build/**", "dist/**", ".venv/**", "htmlcov/**"]
venvPath = "."
venv = ".venv"

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.4.0"
tag_format = "v$version"

[tool.semantic_release]
version_variables = ["pyproject.toml:version", "represent/__init__.py:__version__"]
branch = "main"
changelog_file = "CHANGELOG.md"
commit_parser = "conventional"
build_command = "uv build"
upload_to_pypi = false
upload_to_release = true


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "commitizen>=4.8.3",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.5",
]

[tool.coverage.run]
source = ["represent"]
omit = [
    "tests/*",
    "*/site-packages/*",
    ".venv/*",
]

[tool.coverage.report]
# Fail if coverage is below 80%
fail_under = 80
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
addopts = [
    "--cov=represent",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests (fast, isolated)",
    "e2e: End-to-end tests (slower, uses real data)",
    "performance: Performance benchmark tests",
    "slow: Slow tests that take significant time",
]
